#!/bin/bash

#==================#
#   HEADER START   #
#==================#
### Name: sam_merge_gen_trx_headers.sh
### Created: Aug 28, 2013
### Modified: Feb 17, 2014
### Author: Alexander Kanitz
### Company: Zavolan Group, Biozentrum, University of Basel
### Version: v1.1
### Adapted from: n/a
### Requirements: Bash (not POSIX compliant)
#==================#
#    HEADER END    #
#==================#

# Define variable containing usage information
script=`basename $0`
usage="bash ./$script sam_genome_header [FILE] sam_transcriptome_header [FILE] (comment_lines [FILE])"
descr='Description:\nFor the purpose of merging (1) a SAM file that was aligned against the transcriptome and re-mapped to the genome (e.g. with "sam_trx_to_sam_gen.pl" by Alexander Kanitz, 04-OCT-2013) and (2) a SAM file that was aligned against the genome, this script generates a header for the merged SAM file from the headers of the individual SAM files (e.g. generated by "split_sam_body_header.pl" by Alexander Kanitz, 28-AUG-2013).\nSpecifically, the @PG entries of (1) are appended to (2). To avoid conflicts, all "@PG ID:" values in either header are prepended with a prefix ("trx_" and "gen_" in the case of (1) and (2), respectively). Optionally, comments may be appended to the end of the merged header info via a third file. From this, only valid comment lines of the form "@CO \tab\ COMMENT..." are considered, all other lines are ignored.'

## Die if wrong number of arguments
if [[ $# -lt 2 || $# -gt 3 ]]; then
	echo -e "[ERROR] Wrong number of arguments!\n\nUsage: $usage\n\n${descr}\n" >&2
	exit 1
fi

## Die if input files do not exist
for file in $*; do
	if [ ! -f $file ]; then
		echo -e "[ERROR] File '$file' not found!\n\nUsage: $usage\n\n${descr}\n" >&2
		exit 1
	fi
done

# Modify the header of the SAM file mapped against the genome and save in variable $gen: substitute "@PG ID:xyz" entries with "@PG ID:gen_xyz"
gen=`perl -n -e 'if (/^\@PG\t/) {s/^\@PG\tID:/\@PG\tID:gen_/}; print' < $1`

# Filter and modify the header of the SAM file mapped against the transcriptome and save in variable $trx: select only @PG entries and substitute "@PG ID:xyz" entries with "@PG ID:trx_xyz"
trx=`perl -n -e 'if (/^\@PG\t/) {s/^\@PG\tID:/\@PG\tID:trx_/; print}' < $2`

# Only proper comment lines are used
com=`perl -n -e 'print if /^\@CO\t/' < $3`

## Merge header fragments and exit
if [ $# -eq 2 ]; then
	echo -e "$gen\n$trx"
	exit 0
else
	echo -e "$gen\n$trx\n$com"
	exit 0
fi
## Script should never make it here (sanity check!)
echo -e "[ERROR] Something went wrong...\n" >&2

exit 2
